;; -*- mode: scheme; -*-
;; Egglab Copyright (C) 2013 Dave Griffiths
;;
;; This program is free software: you can redistribute it and/or modify
;; it under the terms of the GNU Affero General Public License as
;; published by the Free Software Foundation, either version 3 of the
;; License, or (at your option) any later version.
;;
;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU Affero General Public License for more details.
;;
;; You should have received a copy of the GNU Affero General Public License
;; along with this program.  If not, see <http://www.gnu.org/licenses/>.

(define speed 0.1)

(define (make-egghunt egg-ids time)
  (list egg-ids time))

(define (egghunt-egg-ids d) (list-ref d 0))
(define (egghunt-modify-egg-ids d v) (list-replace d 0 v))
(define (egghunt-time d) (list-ref d 1))
(define (egghunt-modify-time d v) (list-replace d 1 v))

(define (time-elapsed c)
  (- (game-time c) (egghunt-time (game-data c))))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(define egghunt-id (getURLParameter "egghunt"))

(define (nightjar-intro c)
  (let ((icon-x 150)
        (icon-y 520))
    (game-modify-render
     (lambda (ctx)
       (ctx.drawImage (find-image "eggs.jpg") 0 0)
       (set! ctx.font "normal 70pt 'Press Start 2P'")

       (robo-nightjar-says ctx 17 "You have been sent an easter egghunt made with my artificial eggs to help ecology and evolution research!" 1)
       (set! ctx.font "normal 40pt 'Press Start 2P'")
       (wrap-text ctx "Easter Robot Nightjar says:" 0 160 1000 50)
       (set! ctx.font "normal 15pt 'Press Start 2P'")
       (set! ctx.globalAlpha 0.8)
       (set! ctx.fillStyle "#ffffff")
       (ctx.fillRect 0 (+ icon-y 140) 1500 100)
       (set! ctx.globalAlpha 1))

     (game-modify-buttons
      (list
       (image-button
        ""
        820 450
        "rotate" (find-image "yes.png")
        (lambda (c)
          (server-call-mutate
           "getegghunt"
           (list (list "id" egghunt-id))
           (lambda (c data)
             (let ((hunt-data (JSON.parse data)))
               (let ((info (car (car hunt-data)))
                     (e (list-ref hunt-data 1)))
                 (game-modify-buttons
                  (index-map
                   (lambda (i egg)
                     (image-button
                      "" (list-ref egg 1) (list-ref egg 2) "none"
                      (egg-drawable (JSON.parse (car egg)))
                      (lambda (c) c)))
                   e)
                  (nightjar-challenge
                   info (game-modify-data
                         (lambda (d)
                           (make-egghunt () (game-time c)))
                         c)))))))
          c))

      (image-button
       "" (+ icon-x 0) (+ icon-y 190) #f (find-image "sensory-ecology.png")
       (lambda (c)
         (play-sound "sound/button.wav")
         (set! window.location "http://www.sensoryecology.com/")
         c))

      (image-button
       "" (+ icon-x 130) (+ icon-y 190) #f (find-image "cuckoos.png")
       (lambda (c)
         (play-sound "sound/button.wav")
         (set! window.location "http://www2.zoo.cam.ac.uk/africancuckoos/home.html")
         c))

      (image-button
       "" (+ icon-x 290) (+ icon-y 200) #f (find-image "exeter.png")
       (lambda (c)
         (play-sound "sound/button.wav")
         (set! window.location "http://www.exeter.ac.uk/")
         c))

      (image-button
       "" (+ icon-x 470) (+ icon-y 190) #f (find-image "cu.png")
       (lambda (c)
         (play-sound "sound/button.wav")
         (set! window.location "http://www.zoo.cam.ac.uk/")
         c))

      (image-button
       "" (+ icon-x 690) (+ icon-y 190) #f (find-image "bbsrc.png")
       (lambda (c)
         (play-sound "sound/button.wav")
         (set! window.location "http://www.bbsrc.ac.uk/")
         c))

      (image-button
       "" (+ icon-x 900) (+ icon-y 190) #f (find-image "foam.png")
       (lambda (c)
         (play-sound "sound/button.wav")
         (set! window.location "http://fo.am")
         c))

     )
    c))))


(define (nightjar-challenge info c)
  (game-modify-update
   (lambda (t c)
     (let ((t (+ 1500 (* (time-elapsed c) (- 0 speed)))))
       (if (> t -4500)
           (game-modify-world-offset c (list t 0))
           c
                                        ;(begin
           ;  ;;(send-remaining c)
           ;  (nightjar-env
           ;   (game-modify-world-offset c (list 0 0))))
           )))
   (game-modify-render
    (lambda (ctx)
      (ctx.drawImage (find-image (list-ref info 0) -50 -60) 0 100)
      (set! ctx.font "normal 15pt 'Press Start 2P'"))
     c)))



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; startup

(set! ctx.font "normal 50pt 'Press Start 2P'")

(define egghuntbgs
  (list "bg/egghunt/_MV_MV007_Adult_R_Control_2m_DSC_8956.jpg"))

(load-images!
 (append
  (list
   "button.png"
   "bigbutton-1.png"
   "bigbutton-2.png"
   "medbutton-1.png"
   "egg.png"
   "cf.png"
   "cp.png"
   "mv.png"
   "eggs.jpg"
   "bubble.png"
   "bubble2.png"
   "ren.png"
   "ren-eye1.png"
   "ren-eye2.png"
   "ren-eye3.png"
   "ren-leg1.png"
   "ren-leg2.png"
   "yes.png"
   "no.png"
   "bbsrc.png"
   "cu.png"
   "exeter.png"
   "cuckoos.png"
   "foam.png"
   "sensory-ecology.png")
   egghuntbgs
   egg-images)
 (lambda ()
   (start-game canvas ctx)))
